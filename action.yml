# action.yml
# https://help.github.com/en/actions/building-actions/metadata-syntax-for-github-actions
name: 'octodns-sync'
description: 'Run octodns/octodns to deploy your DNS config to any cloud.'
inputs:
  add_pr_comment:
    description: 'Add plan as a comment, when triggered by a pull request?'
    required: true
    default: 'No'
  config_path:
    description: 'Path, relative to your repository root, of the config file
                  you would like octodns to use.'
    required: true
    default: 'public.yaml'
  doit:
    description: 'Really do it? Set "--doit" to do it; Any other string to
                  not do it.'
    required: false
    default: ''
  force:
    description: 'Run octodns-sync in force mode?'
    required: false
    default: 'No'
  header:
    description: 'Provide a custom header to use in pr comment'
    required: true
    default: '## octoDNS Plan for ${( github.sha }}'
  zones:
    description: 'Space separated list of zones to sync, leave empty to sync
                  all zones in the config file'
    required: false
    default: ''
  pr_comment_token:
    description: 'Provide a token to use, if you set add_pr_comment to Yes.'
    required: true
    default: 'Not set'
outputs:
  log:
    description: '`octodns-sync` command output'
    value: ${{ steps.run.outputs.log}}
  plan:
    description: 'Planned changes, if configured in octodns'
    value: ${{ steps.run.outputs.plan}}

runs:
  using: 'composite'
  steps:
    - name: Run octodns-sync
      id: run
      env:
        CONFIG_PATH: ${{ inputs.config_path }}
        DOIT: ${{ inputs.doit }}
        FORCE: ${{ inputs.force }}
        ZONES: ${{ inputs.zones }}
      run: ${{ github.action_path }}/scripts/run.sh
      shell: bash
      working-directory: ${{ github.workspace }}
    - name: Add pull request comment
      id: comment
      env:
        ADD_PR_COMMENT: ${{ inputs.add_pr_comment }}
        HEADER: ${{ inputs.header }}
        PR_COMMENT_TOKEN: ${{ inputs.pr_comment_token }}
        PR_CUSTOM_HEADER: "${{ inputs.pr_custom_header }}"
        COMMENTS_URL: ${{ github.event.pull_request.comments_url }}
      run: ${{ github.action_path }}/scripts/comment.sh
      shell: bash
      working-directory: ${{ github.workspace }}
branding:
  icon: 'list'
  color: 'purple'
